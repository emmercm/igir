# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# https://hanxiao.io/2021/01/24/Speedup-CI-Workflow-in-Github-Actions-via-Strategy-Matrix/

name: Node.js Test

on:
  pull_request:
    types:
      # - edited  # PR's base branch was changed
      - opened
      - reopened
      - synchronize  # PR's branch was edited (i.e. new commits)
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (refs/heads/<branch>, refs/tags/<tag>, etc.) or SHA'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ref: ${{ inputs.ref || github.sha || github.ref }}

jobs:
  path-filter:
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.ref }}
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            changes:
              - '.github/workflows/node-test.yml'
              - 'packages/**'
              - 'src/**'
              - 'test/**'
              - '*'

  node-lint:
    needs:
      - path-filter
    if: ${{ needs.path-filter.outputs.changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # Setup and install
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.ref }}
          submodules: 'recursive'
      - uses: volta-cli/action@v4
      - run: npm ci
      # Lint the source files
      - run: npm start -- --help
      - run: npm run lint

  # TODO(cemmer): check for deprecated dependencies
  # https://stackoverflow.com/questions/44097267/find-packages-that-give-deprecated-warning-npm

  node-unit:
    needs:
      - path-filter
    if: ${{ needs.path-filter.outputs.changes == 'true' }}
    name: node-unit (${{ matrix.os }}, ${{ matrix.node-version || 'package.json' }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        # TODO(cemmer): chdman-js and maxcso-js don't have Windows ARM builds, so it won't test the same
        os: [ ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest ]
        node-version: [ '' ]
        include:
          - os: ubuntu-latest
            node-version: 18
          - os: macos-latest
            node-version: 18
          - os: windows-latest
            node-version: 18
    steps:
      # Setup and install
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.ref }}
          submodules: 'recursive'
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
      - shell: bash
        run: |
          rm -rf packages/*/prebuilds
          npm ci --foreground-scripts
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-2.0-0 libsdl2-ttf-2.0-0

      # Test the source files
      - run: npm run test:unit

  node-e2e:
    needs:
      - path-filter
    if: ${{ needs.path-filter.outputs.changes == 'true' }}
    name: node-unit (${{ matrix.node-version || 'package.json' }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [ '', 18 ]
    steps:
      # Setup and install
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.ref }}
          submodules: 'recursive'
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --foreground-scripts
      - run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-2.0-0 libsdl2-ttf-2.0-0
      # Test the built files
      - run: ./test/endToEndTest.sh

  node-package:
    needs:
      - path-filter
    if: ${{ needs.path-filter.outputs.changes == 'true' }}
    name: node-unit (${{ matrix.node-version || 'package.json' }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '', 18 ]
    steps:
      # Setup and install
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.ref }}
          submodules: 'recursive'
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      # Test the packaging
      - run: |
          set -x
          npm pack
          tar -xvzf igir-*.tgz
          cd package
          npm install --foreground-scripts
          ./dist/index.js --help
          cd ..
          rm -rf package

  # !!! This check should be required by GitHub !!!
  test-status-check:
    if: always()
    needs:
      - path-filter
      - node-lint
      - node-unit
      - node-e2e
      - node-package
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: node-lint, node-unit, node-e2e, node-build, node-package
          jobs: ${{ toJSON(needs) }}
