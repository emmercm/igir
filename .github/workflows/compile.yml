name: Compile Node.js

on:
  # When any PR (including forked) is "opened or reopened or when the head branch of the pull request is updated"
  pull_request:
  # Pushes to branches of the root repo (not forked repos), including PR merge commits
  push:
    branches-ignore:
      - 'main'
  release:
    types: [published]

jobs:
  node-compile:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ ubuntu, macos, windows ]
        include:
          - os: ubuntu
            build: |
              NPM_PKG_VERSION=$(npm pkg get version | sed 's/"//g')
              NODE_ARCH=$(node --print 'process.arch')
              BIN_OUTPUT="igir-${NPM_PKG_VERSION}-${RUNNER_OS}-${NODE_ARCH}.tar.gz"
              echo "BIN_OUTPUT=${BIN_OUTPUT}" >> $GITHUB_ENV
              cp package.json build/
              ./node_modules/.bin/caxa --input build/ --output igir -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/index.js"
              ./igir --help
              tar cvf - igir | gzip --best > "${BIN_OUTPUT}"
          - os: macos
            build: |
              NPM_PKG_VERSION=$(npm pkg get version | sed 's/"//g')
              NODE_ARCH=$(node --print 'process.arch')
              BIN_OUTPUT="igir-${NPM_PKG_VERSION}-${RUNNER_OS}-${NODE_ARCH}.tar.gz"
              echo "BIN_OUTPUT=${BIN_OUTPUT}" >> $GITHUB_ENV
              cp package.json build/
              ./node_modules/.bin/caxa --input build/ --output igir -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/index.js"
              ./igir --help
              tar cvf - igir | gzip --best > "${BIN_OUTPUT}"
          - os: windows
            build: |
              $NPM_PKG_VERSION=$(npm pkg get version).replace('"','')
              $NODE_ARCH=$(node --print 'process.arch')
              $BIN_OUTPUT="igir-$NPM_PKG_VERSION-${env:RUNNER_OS}-${NODE_ARCH}.zip"
              echo "BIN_OUTPUT=${BIN_OUTPUT}" | Out-File -FilePath $env:GITHUB_ENV -Append # no need for -Encoding utf8
              copy package.json build\
              .\node_modules\.bin\caxa --input build\ --output igir.exe -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/index.js"
              .\igir.exe --help
              Compress-Archive -Path igir.exe -DestinationPath "${BIN_OUTPUT}" -CompressionLevel Optimal -Force
    steps:
      # Setup and install
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      # Compile and upload
      - run: ${{ matrix.build }}
      - if: ${{ github.event_name == 'release' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: ${{ env.BIN_OUTPUT }}
          if-no-files-found: error

  release-update:
    if: ${{ github.event_name == 'release' }}
    needs:
      - node-compile
    runs-on: ubuntu-latest
    steps:
      # Get the package version
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm ci
      - run: echo "NPM_PKG_VERSION=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_ENV
      # Download and update
      - uses: actions/download-artifact@v3
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NPM_PKG_VERSION }}
          files: |
            ubuntu/*
            macos/*
            windows/*

  # !!! This check should be required by GitHub !!!
  compile-status-check:
    needs:
      - node-compile
    runs-on: ubuntu-latest
    steps:
      - run: echo ok
