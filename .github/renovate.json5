{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
  ],
  dependencyDashboard: true,
  configMigration: true,

  // Personal preferences
  timezone: 'America/Los_Angeles',
  assignees: ['@emmercm'],
  reviewers: ['@emmercm'],
  assignAutomerge: false, // default

  // Open PRs immediately for vulnerability alerts
  // Requires "dependency graph" as well as Dependabot "alerts" and "security updates" enabled for the repo
  vulnerabilityAlerts: {
    labels: ['security'],
    platformAutomerge: true,
    // Renovate's defaults for `vulnerabilityAlerts`
    groupName: '',
    schedule: [],
    dependencyDashboardApproval: false,
    minimumReleaseAge: '',
    rangeStrategy: 'update-lockfile',
    commitMessageSuffix: '[SECURITY]',
    branchTopic: '{{{datasource}}}-{{{depName}}}-vulnerability',
    prCreation: 'immediate',
  },
  // WARN: "When the lockfileVersion is higher than 1 in package-lock.json, remediations are only possible when changes are made to package.json."
  transitiveRemediation: true,

  // Use pseudo semantic commit (and therefore PR title) commit messages
  // "{{{commitMessagePrefix}}} {{{commitMessageAction}}} {{{commitMessageTopic}}} {{{commitMessageExtra}}} {{{commitMessageSuffix}}}"
  commitMessagePrefix: 'Chore:',
  commitMessageAction: 'update',

  // Separate potentially breaking updates, group others
  separateMultipleMajor: true,
  separateMajorMinor: true, // default
  separateMinorPatch: false, // default

  // Allow auto-merging of PRs, but reduce their spam on the commit log
  schedule: 'on the 27th day of the month',
  prCreation: 'immediate', // default
  prHourlyLimit: 0, // no limit
  automerge: true,
  platformAutomerge: true, // default
  // Rely on the PR Rebaser GitHub Action to do this. PRs will merge in the order they are created,
  //  so the `prPriority` option SHOULD be respected.
  rebaseWhen: 'conflicted', // separate PRs updating the lockfile are likely to conflict each other
  updateNotScheduled: true, // default

  // Stability settings: don't raise a PR until a dependency is at least 3 days old
  rangeStrategy: 'pin',
  minimumReleaseAge: '3 days',
  internalChecksFilter: 'strict',

  packageRules: [
    // Update Node.js versions immediately
    {
      matchPackageNames: ['node'],
      groupName: 'Node.js',
      // The Docker images (used to build executables) frequently don't get published until days
      //  after the Node.js version was updated, so try to prevent immediately failing PRs
      minimumReleaseAge: '7 days',
      // Renovate's defaults for these options (overrides our global defaults)
      schedule: 'at any time',
      prCreation: 'immediate',
      automerge: true
    },

    // Group any/all package files in the docs/ directory
    {
      matchFileNames: ['docs/**'],
      groupName: 'docs dependencies'
    },

    // Perform dependency pinning immediately
    {
      matchUpdateTypes: ['pin'],
      commitMessageAction: 'pin',
      groupName: 'dependency ranges',
      // Renovate's defaults for these options (overrides our global defaults)
      schedule: 'at any time',
      prCreation: 'immediate',
      automerge: true,
    },

    // Disable automatic merging of GitHub Actions major version updates
    {
      matchManagers: ['github-actions'],
      matchUpdateTypes: ['major'],
      automerge: false
    }
  ],

  npm: {
    lockFileMaintenance: {
      // These options are required to override the `lockFileMaintenance` defaults
      enabled: true,
      schedule: 'on the 28th day of the month', // one day after the above, to de-conflict
      commitMessageAction: 'update', // same as above
      commitMessageTopic: 'lockfile',
    },

    packageRules: [
      // Dependencies
      {
        // Group dependencies and their `@types/*` packages together
        groupName: 'dependencies',
        matchDepTypes: ['dependencies', 'devDependencies'],
        // Only group non-major updates
        matchUpdateTypes: ['patch', 'minor']
      },
      {
        matchDepTypes: ['dependencies'],
        // Be strict about Node.js version compatability (from package's `engines.node`)
        constraintsFiltering: 'strict',
        rollbackPrs: true,
        rollback: {
          prPriority: 10,
        },
      },

      // Dev dependencies
      {
        // Group devDependencies together, minus type definitions for dependencies
        // https://github.com/renovatebot/renovate/issues/519
        groupName: 'dev dependencies',
        matchDepTypes: ['devDependencies'],
        excludePackageNames: [
          '@types/7zip-min',
          '@types/archiver',
          '@types/async',
          '@types/cli-progress',
          '@types/figlet',
          '@types/micromatch',
          '@types/semver',
          '@types/tar',
          '@types/unzipper',
          '@types/xml2js',
          '@types/yargs',
        ],
        // Only group non-major updates
        matchUpdateTypes: ['patch', 'minor']
      },
      {
        // Group ESLint together so files can be fixed automatically
        matchPackagePatterns: [
          '^@typescript-eslint',
          '^eslint',
        ],
        groupName: 'ESLint'
      },
      {
        // Group Jest together because of peerDependencies
        matchPackageNames: [
          '@jest/globals',
          '@types/jest',
          'jest',
          'ts-jest',
        ],
        groupName: 'Jest',
      },
      {
        // Separate TypeScript because upgrades are dependent on support by other dependencies
        matchPackageNames: ['typescript'],
        groupName: 'TypeScript',
        prPriority: -10,
      },

      // Everything else
      {
        matchDepTypes: ['optionalDependencies', 'peerDependencies', 'engines'],
        enabled: false,
      }
    ]
  }
}
